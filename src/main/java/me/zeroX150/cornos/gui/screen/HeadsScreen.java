package me.zeroX150.cornos.gui.screen;

import me.zeroX150.cornos.Cornos;
import me.zeroX150.cornos.etc.config.Colors;
import me.zeroX150.cornos.features.module.impl.external.Hud;
import me.zeroX150.cornos.gui.widget.CustomButtonWidget;
import net.minecraft.client.gui.DrawableHelper;
import net.minecraft.client.gui.screen.Screen;
import net.minecraft.client.gui.widget.TextFieldWidget;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.nbt.NbtList;
import net.minecraft.nbt.NbtString;
import net.minecraft.text.Text;

import java.util.Base64;
import java.util.Random;
import java.util.UUID;

public class HeadsScreen extends Screen {

    TextFieldWidget ign;
    TextFieldWidget eduUrl;

    public HeadsScreen() {
        super(Text.of("Custom Heads"));
    }

    @Override
    protected void init() {
        super.init();
        assert Cornos.minecraft.player != null;
        ign = new TextFieldWidget(textRenderer, 5, 20, 200, 20, Text.of("Player's IGN"));
        ign.setMaxLength(65535);
        eduUrl = new TextFieldWidget(textRenderer, 5, 50, 200, 20, Text.of("Minecraft Education URL"));
        eduUrl.setMaxLength(65535);
        CustomButtonWidget givePlayerHead = new CustomButtonWidget(215, 20, 200, 20, Text.of("Give Player Head"),
                () -> {
                    String name = ign.getText();
                    ItemStack playerHead = new ItemStack(Items.PLAYER_HEAD);
                    playerHead.setCustomName(Text.of("§r§bSkull of " + name + ". §4Generated by §lCornos"));
                    NbtCompound compoundTag = playerHead.getOrCreateSubTag("SkullOwner");
                    compoundTag.put("Name", NbtString.of(name));
                    Cornos.minecraft.player.getInventory().addPickBlock(playerHead);

                });
        CustomButtonWidget giveHdHead = new CustomButtonWidget(215, 50, 200, 20, Text.of("Give HD Head"), () -> {
            String texture = eduUrl.getText();
            String value = "{\"textures\":{\"SKIN\":{\"url\":\"" + texture + "\"}}}";
            value = Base64.getEncoder().encodeToString(value.getBytes());
            ItemStack playerHead = new ItemStack(Items.PLAYER_HEAD);
            playerHead.setCustomName(Text.of("§r§bA swagger HD head. §4Generated by §lCornos"));
            NbtCompound compoundTag = playerHead.getOrCreateSubTag("SkullOwner");
            compoundTag.put("Id", NbtString.of(UUID.randomUUID().toString()));
            compoundTag.put("Name", NbtString.of(randomName()));
            NbtCompound properties = compoundTag.getCompound("Properties");
            NbtList listTag = new NbtList();
            NbtCompound textures = properties.getCompound("Value");
            textures.put("Value", NbtString.of(value));
            listTag.add(textures);
            properties.put("textures", listTag);
            compoundTag.put("Properties", properties);
            Cornos.minecraft.player.getInventory().addPickBlock(playerHead);

        });

        this.addDrawableChild(givePlayerHead);
        this.addDrawableChild(giveHdHead);
    }

    @Override
    public void render(MatrixStack matrices, int mouseX, int mouseY, float delta) {
        DrawableHelper.fill(matrices, 0, 0, width, height, Colors.GUIBACKGROUND.get().getRGB());
        DrawableHelper.drawCenteredText(matrices, textRenderer, "Custom Heads", 105, 5, 0xFFFFFF);
        ign.render(matrices, mouseX, mouseY, delta);
        if (ign.getText().isEmpty())
            ign.setSuggestion("Player name");
        else
            ign.setSuggestion("");
        eduUrl.render(matrices, mouseX, mouseY, delta);
        if (eduUrl.getText().isEmpty())
            eduUrl.setSuggestion("Minecraft edu URL");
        else
            eduUrl.setSuggestion("");
        textRenderer.draw(matrices, "Remember to open your inventory before using these", 1, height - 10,
                Hud.themeColor.getRGB());
        super.render(matrices, mouseX, mouseY, delta);
    }

    @Override
    public boolean charTyped(char chr, int keyCode) {
        ign.charTyped(chr, keyCode);
        eduUrl.charTyped(chr, keyCode);
        return false;
    }

    @Override
    public boolean keyPressed(int keyCode, int scanCode, int modifiers) {
        ign.keyPressed(keyCode, scanCode, modifiers);
        eduUrl.keyPressed(keyCode, scanCode, modifiers);
        return super.keyPressed(keyCode, scanCode, modifiers);
    }

    @Override
    public boolean keyReleased(int keyCode, int scanCode, int modifiers) {
        ign.keyReleased(keyCode, scanCode, modifiers);
        eduUrl.keyReleased(keyCode, scanCode, modifiers);
        return super.keyPressed(keyCode, scanCode, modifiers);
    }

    @Override
    public boolean mouseClicked(double mouseX, double mouseY, int button) {
        ign.mouseClicked(mouseX, mouseY, button);
        eduUrl.mouseClicked(mouseX, mouseY, button);
        return super.mouseClicked(mouseX, mouseY, button);
    }

    private String randomName() {
        String chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder builder = new StringBuilder();
        Random rnd = new Random();
        while (builder.length() < 18) {
            int index = (int) (rnd.nextFloat() * chars.length());
            builder.append(chars.charAt(index));
        }
        return builder.toString();
    }
}
