/*
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
# Project: Cornos
# File: BoatPhase
# Created by constantin at 15:09, MÃ¤r 13 2021
PLEASE READ THE COPYRIGHT NOTICE IN THE PROJECT ROOT, IF EXISTENT
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
package me.constantindev.ccl.module.EXPLOIT;

import me.constantindev.ccl.Cornos;
import me.constantindev.ccl.etc.base.Module;
import me.constantindev.ccl.etc.config.CConf;
import me.constantindev.ccl.etc.helper.STL;
import me.constantindev.ccl.etc.ms.KeyBind;
import me.constantindev.ccl.etc.ms.ModuleType;
import me.constantindev.ccl.etc.render.RenderableLine;
import net.minecraft.client.util.InputUtil;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.entity.vehicle.BoatEntity;
import net.minecraft.network.packet.c2s.play.VehicleMoveC2SPacket;
import net.minecraft.util.math.Vec3d;
import org.lwjgl.glfw.GLFW;

import java.awt.*;

public class BoatPhase extends Module {
    RenderableLine rlL = null;
    KeyBind exec = new KeyBind(GLFW.GLFW_KEY_ENTER);
    int incr = GLFW.GLFW_KEY_UP;
    int decr = GLFW.GLFW_KEY_DOWN;
    double currentLength = 5.0;

    public BoatPhase() {
        super("BoatPhase", "Teleportation but boats", ModuleType.EXPLOIT);
    }

    @Override
    public void onEnable() {
        STL.notifyUser("Alt + arrow up to increment range, Alt + arrow down to decrement. Alt + enter to tp");
        super.onEnable();
    }

    @Override
    public void onRender(MatrixStack ms, float td) {
        if (rlL != null) this.rlq.add(rlL);
        super.onRender(ms, td);
    }

    @Override
    public void onExecute() {
        if (Cornos.minecraft.getNetworkHandler() == null) return;
        assert Cornos.minecraft.player != null;
        Vec3d pos = Cornos.minecraft.player.getPos();
        Vec3d direction = Cornos.minecraft.player.getRotationVector();
        Color cr = new Color(CConf.latestRGBVal);
        rlL = new RenderableLine(pos, pos.add(direction.multiply(currentLength)), cr.getRed(), cr.getGreen(), cr.getBlue(), cr.getAlpha(), 1);
        if (InputUtil.isKeyPressed(Cornos.minecraft.getWindow().getHandle(), GLFW.GLFW_KEY_LEFT_ALT)) {
            if (InputUtil.isKeyPressed(Cornos.minecraft.getWindow().getHandle(), incr)) {
                currentLength += 0.1;
            } else if (InputUtil.isKeyPressed(Cornos.minecraft.getWindow().getHandle(), decr)) {
                currentLength -= 0.1;
                if (currentLength < 0) currentLength = 0;
            } else if (exec.isPressed()) {
                if (!(Cornos.minecraft.player.getVehicle() instanceof BoatEntity)) {
                    STL.notifyUser("Sir i dont think you are in a boat");
                    return;
                }
                BoatEntity boat = (BoatEntity) Cornos.minecraft.player.getVehicle();
                Vec3d np = pos.add(direction.multiply(currentLength));
                boat.updatePosition(np.x, np.y, np.z);
                VehicleMoveC2SPacket vecmove = new VehicleMoveC2SPacket(boat);
                Cornos.minecraft.getNetworkHandler().sendPacket(vecmove);

            }
        }
        super.onExecute();
    }
}
